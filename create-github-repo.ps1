# Script para criar reposit√≥rio GitHub automaticamente

$repoName = "sistema-medicamentos"
$description = "Sistema DHS via PGS Medicamentos - Acesso a medicamentos com orientacao MP/Defensoria"

Write-Host "üöÄ Criando reposit√≥rio GitHub automaticamente..." -ForegroundColor Green

# Usando GitHub CLI (gh) para criar reposit√≥rio
try {
    # Verificar se gh est√° instalado
    $ghInstalled = Get-Command gh -ErrorAction SilentlyContinue
    
    if ($ghInstalled) {
        Write-Host "‚úÖ GitHub CLI encontrado!" -ForegroundColor Green
        
        # Criar reposit√≥rio
        gh repo create $repoName --public --description $description --source=. --remote=origin --push
        
        Write-Host "‚úÖ Reposit√≥rio criado e c√≥digo enviado!" -ForegroundColor Green
        Write-Host "üìÅ GitHub: https://github.com/cordeirotelecom/$repoName" -ForegroundColor Yellow
        
    } else {
        Write-Host "‚ùå GitHub CLI n√£o encontrado. Instalando..." -ForegroundColor Red
        
        # Instalar GitHub CLI via winget
        winget install --id GitHub.cli
        
        Write-Host "‚úÖ GitHub CLI instalado! Execute o script novamente." -ForegroundColor Green
    }
} catch {
    Write-Host "‚ùå Erro: $($_.Exception.Message)" -ForegroundColor Red
    Write-Host "üí° Alternativa: Acesse https://github.com/new manualmente" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "üìã PR√ìXIMO PASSO - VERCEL DEPLOY:" -ForegroundColor Cyan
Write-Host "1. Acesse: https://vercel.com"
Write-Host "2. Login com GitHub"
Write-Host "3. Import projeto: $repoName"
Write-Host "4. Deploy autom√°tico!"
